name: Probely Scan Block

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROBELY_API_KEY: ${{ secrets.PROBELY_API_KEY }}
      TARGET_ID: ${{ vars.TARGET_ID }}

    steps:
      # Step 1: Install Probely CLI and necessary tools
      - name: Install Probely CLI
        run: |
          # Install Probely CLI
          pip install probely
          # Install jq for JSON processing (already present on GitHub runners, but good practice)
          # sudo apt-get install -y jq  # Uncomment if running on a non-standard image
          probely targets get

      # Step 2: Start scan and capture the newly created Scan ID
      - name: Start Scan
        run: |
          # Start a scan and capture the new Scan ID (which is the command's output)
          SCAN_ID=$(probely targets start-scan $TARGET_ID)
          echo "Started Scan ID: $SCAN_ID"
          echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV
      
      # Step 3: Check for High risk vulnerabilities and wait for scan to finish
      - name: Check for High risk vulnerabilities
        # probely scans check-findings waits for the scan to finish and
        # exits with a non-zero code (failing the pipeline) if high-risk findings > 0.
        run: |
          echo "Waiting for Scan ID $SCAN_ID to finish and checking for high risk findings..."
          # You can add --max-highs 0 to explicitly state the limit, but 0 is the default.
          probely scans check-findings "$SCAN_ID"
      
          
